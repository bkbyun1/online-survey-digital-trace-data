{"version":3,"sources":["firebase.js","config.js","VotingBlock.jsx","Resume.js","LandingPage.jsx","Admin.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","VotingBlock","_ref","sectionName","recordActivity","_useState","useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","clickFunction","event","whichClicked","target","name","split","concat","_jsxs","className","children","_jsx","src","imageToURL","onClick","alt","Resume","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","positionList","db","firestore","USER_DATA","collection","doc","qualtricsUserId","RESUME_CONTENT","APPLICANTS","collapsibleOpened","collapsibleToggled","bind","_assertThisInitialized","_createClass","key","value","_this2","this","setState","studyVersion","resumeVersion","parseCandidateData","getResume1Values","displayValues","getResume2Values","callback","isMan","Math","random","applicant","applicants","legal_name","isParent","education","work1","work2","college","major","school_name","set","_this3","get","then","resume1values","data","nameIndex","maleCandidates","femaleCandidates","_this4","nonparent","toString","parent","map","str","trim","filter","Boolean","misc","degree","duration","university","addPositionToList","eventKey","callbackFunc","_this5","applicantData","querySnapshot","forEach","push","catch","error","console","text","_this6","matches","match","options","slice","replace","newPosition","prevState","_toConsumableArray","e","_this7","length","onMouseMove","_onMouseMove","Accordion","Card","Header","style","background","paddingLeft","paddingRight","Toggle","as","Button","color","width","display","flexDirection","justifyContent","fontSize","alignItems","variant","educationSectionOpened","workSectionOpened","miscSectionOpened","id","Collapse","Body","borderTop","position","index","title","company","description","Divider","item","replaceGenderOptions","React","Component","imageName","process","LandingPage","iframes","setIframes","renderEmbeddedResume","iframeSrc","iframeTitle","newIframe","height","href","Admin","showPasswordErrorMessage","isAuthenticated","typedText","userIDs","resumeCSVurl","activitiesCSVurl","DATABASE","resumeContent","activityContent","rootElement","document","getElementById","ModalReact","setAppElement","fetchData","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tmp","wrap","_context","prev","next","sent","docs","resumePromises","user","Promise","all","getResumeContent","createCSV","activityPromises","getActivityContent","stop","apply","arguments","responseID","resumeNum","exists","_objectSpread","log","activityID","csv","Papa","unparse","blob","Blob","type","URL","createObjectURL","download","isOpen","onSubmit","preventDefault","submitPassword","htmlFor","onChange","handleChange","autoFocus","moment","require","App","activityCounter","loc","location","hash","parseInt","_recordActivity","category","padStart","_x","_x2","_x3","HashRouter","Route","path","render","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8b70c6c1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Contains sensitive information, so you have to create this file yourself\nimport { firebaseConfig } from \"./config.js\";\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","// The demo version doesn't log to Firebase, and speeds up the Admin page by only downloading a small amount of sample data\nexport const IS_DEMO_VERSION = true;\n\n// This is the password to log into the admin page and download the data\nexport const adminPassword = \"it's so so secret\";\n\n// This is the Firebase configuration, which you can get from the Firebase console\n// (Order doesn't matter)\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCkJZaaXU2FqdsvHOhfCwSyQAmBl96GjAQ\",\n  authDomain: \"tier1-testing.firebaseapp.com\",\n  projectId: \"tier1-testing\",\n  storageBucket: \"tier1-testing.appspot.com\",\n  messagingSenderId: \"1046739624981\",\n  appId: \"1:1046739624981:web:26ddf0d0a3a19ad0e5da1c\",\n  measurementId: \"G-B5RW7FTVVQ\"\n};\n","import React, { useState } from \"react\";\nimport { imageToURL } from \"./Resume\";\n\n/** Component: upvote, circle, and downvote, in traffic light colors. */\nexport default function VotingBlock({ sectionName, recordActivity }) {\n\t// null = not selected, 0 = upvote, 1 = circle, 2 = downvote\n\tconst [selectedIndex, setSelectedIndex] = useState(null);\n\n\t/** Handles click on upvote, circle, or downvote. */\n\tfunction clickFunction(event) {\n\t\tconst name = event.target.name;\n\n\t\tlet whichClicked;\n\t\tswitch (name.split(\"_\")[1]) {\n\t\t\tcase \"upvote\":\n\t\t\t\twhichClicked = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"circle\":\n\t\t\t\twhichClicked = 1;\n\t\t\t\tbreak;\n\t\t\tcase \"downvote\":\n\t\t\t\twhichClicked = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (selectedIndex === whichClicked) {\n\t\t\t// If already selected, deselect\n\t\t\tsetSelectedIndex(null);\n\t\t\trecordActivity(\n\t\t\t\t\"click\",\n\t\t\t\tevent.target.name,\n\t\t\t\t`un-clicked ${event.target.name} button`\n\t\t\t);\n\t\t} else {\n\t\t\t// Otherwise, select\n\t\t\tsetSelectedIndex(whichClicked);\n\t\t\trecordActivity(\n\t\t\t\t\"click\",\n\t\t\t\tevent.target.name,\n\t\t\t\t`clicked ${event.target.name} button`\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"vertical\">\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_upvote`}\n\t\t\t\tsrc={\n\t\t\t\t\tselectedIndex === 0\n\t\t\t\t\t\t? imageToURL(\"upvote_selected\")\n\t\t\t\t\t\t: imageToURL(\"upvote\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"upvote\"\n\t\t\t/>\n\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_circle`}\n\t\t\t\tsrc={\n\t\t\t\t\tselectedIndex === 1\n\t\t\t\t\t\t? imageToURL(\"circle_selected\")\n\t\t\t\t\t\t: imageToURL(\"circle\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"question mark\"\n\t\t\t/>\n\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_downvote`}\n\t\t\t\tsrc={\n\t\t\t\t\tselectedIndex === 2\n\t\t\t\t\t\t? imageToURL(\"downvote_selected\")\n\t\t\t\t\t\t: imageToURL(\"downvote\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"downvote\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport firebase from \"./firebase\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport VotingBlock from \"./VotingBlock\";\n\n/*\n  This is the main component for the resume page. It displays a resume with various sections that can be toggled open and closed.\n  All of the randomization and pre-processing of the Firebase values is done here.\n*/\n\nexport default class Resume extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpositionList: [],\n\t\t};\n\n\t\t// Add props to \"this\"\n\t\tthis.recordActivity = this.props.recordActivity;\n\n\t\tconst db = firebase.firestore();\n\t\tthis.db = db;\n\t\tthis.USER_DATA = db\n\t\t\t.collection(\"responseIDs\")\n\t\t\t.doc(this.props.qualtricsUserId);\n\t\tthis.RESUME_CONTENT = db.collection(\"resume\");\n\t\tthis.APPLICANTS = db.collection(\"Applicants\");\n\n\t\tthis.collapsibleOpened = this.collapsibleToggled.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ studyVersion: this.props.studyVersion });\n\t\tthis.setState({ resumeVersion: this.props.resumeVersion }, () => {\n\t\t\tthis.parseCandidateData(() => {\n\t\t\t\t// On the first resume, we'll decide the data the user will see in the whole study\n\t\t\t\tif (this.state.resumeVersion === 1) {\n\t\t\t\t\tthis.getResume1Values(this.displayValues);\n\t\t\t\t} else {\n\t\t\t\t\t// Show the appropriate resume data\n\t\t\t\t\tthis.getResume2Values(this.displayValues);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/** The first resume has randomly-decided values. Decide them and put into state. */\n\tgetResume1Values(callback) {\n\t\t// Select gender\n\t\tconst isMan = Math.random() < 0.5;\n\n\t\tlet applicant = this.state.applicants[0];\n\t\tlet name = applicant.legal_name;\n\n\t\t// Select parenthood\n\t\tconst isParent = Math.random() < 0.5;\n\n\t\t// Select education\n\t\t// Could be more than two options in the future\n\t\tconst education = Math.random() < 0.5 ? \"a\" : \"b\";\n\n\t\t// Could be more than two options in the future\n\t\tconst work1 = Math.random() < 0.5 ? \"a\" : \"b\";\n\t\tconst work2 = Math.random() < 0.5 ? \"a\" : \"b\";\n\n\t\t// Store resume 1 values in state\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tisMan: isMan,\n\t\t\t\tisParent: isParent,\n\t\t\t\teducation: education,\n\t\t\t\twork1: work1,\n\t\t\t\twork2: work2,\n\t\t\t\tname: applicant.legal_name,\n\t\t\t\tcollege: applicant.college,\n\t\t\t\tmajor: applicant.major,\n\t\t\t\tschool_name: applicant.school_name,\n\t\t\t\tstate: applicant.state,\n\t\t\t},\n\t\t\t// Now that info is in state, call the callback\n\t\t\tcallback\n\t\t);\n\n\t\t// Create document for this user\n\t\tthis.USER_DATA.set({});\n\n\t\t// Store resume 1 values in the database\n\t\tthis.USER_DATA.collection(\"values shown\").doc(\"resume 1\").set({\n\t\t\tisMan: isMan,\n\t\t\tisParent: isParent,\n\t\t\teducation: education,\n\t\t\twork1: work1,\n\t\t\twork2: work2,\n\t\t\tname: name,\n\t\t});\n\t}\n\n\t/** The second resume has the opposite values to the first. Calculate them and put into state. */\n\tgetResume2Values(callback) {\n\t\t// Get the values shown to this user for resume 1\n\t\tthis.USER_DATA.collection(\"values shown\")\n\t\t\t.doc(\"resume 1\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tconst resume1values = doc.data();\n\t\t\t\t// Same gender\n\t\t\t\tconst isMan = resume1values.isMan;\n\n\t\t\t\t// The other name\n\t\t\t\tconst nameIndex = resume1values.nameIndex === 0 ? 1 : 0;\n\t\t\t\tconst name = isMan\n\t\t\t\t\t? this.state.maleCandidates[nameIndex].name\n\t\t\t\t\t: this.state.femaleCandidates[nameIndex].name;\n\n\t\t\t\t// Opposite parenthood\n\t\t\t\tconst isParent = !resume1values.isParent;\n\n\t\t\t\t// Opposite education\n\t\t\t\t// Could be more than two options in the future, which would need more logic\n\t\t\t\tconst education = resume1values.education === \"a\" ? \"b\" : \"a\";\n\n\t\t\t\t// Opposite work history\n\t\t\t\t// Could be more than two options in the future, which would need more logic\n\t\t\t\tconst work1 = resume1values.work1 === \"a\" ? \"b\" : \"a\";\n\t\t\t\tconst work2 = resume1values.work2 === \"a\" ? \"b\" : \"a\";\n\n\t\t\t\t// Store resume 2 values in state\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tisMan: isMan,\n\t\t\t\t\t\tisParent: isParent,\n\t\t\t\t\t\teducation: education,\n\t\t\t\t\t\twork1: work1,\n\t\t\t\t\t\twork2: work2,\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tnameIndex: nameIndex,\n\t\t\t\t\t},\n\t\t\t\t\t// Now that info is in state, call the callback\n\t\t\t\t\tcallback\n\t\t\t\t);\n\n\t\t\t\t// Store resume 2 values in the database\n\t\t\t\tthis.USER_DATA.collection(\"values shown\").doc(\"resume 2\").set({\n\t\t\t\t\tisMan: isMan,\n\t\t\t\t\tisParent: isParent,\n\t\t\t\t\teducation: education,\n\t\t\t\t\twork1: work1,\n\t\t\t\t\twork2: work2,\n\t\t\t\t\tname: name,\n\t\t\t\t\tnameIndex: nameIndex,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/** Once we've decided the values, actually display them (based on state) */\n\tdisplayValues() {\n\t\t// Misc section\n\t\tthis.RESUME_CONTENT.doc(\"misc\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tlet parenthoodText = null;\n\t\t\t\t// Based on parent/nonparent\n\t\t\t\tif (this.state.isParent) {\n\t\t\t\t\tparenthoodText = doc.data().nonparent.toString();\n\t\t\t\t} else {\n\t\t\t\t\tparenthoodText = doc.data().parent.toString();\n\t\t\t\t}\n\n\t\t\t\t// Put the text into a nicer format\n\t\t\t\tlet split = parenthoodText\n\t\t\t\t\t// Split each sentence into a bullet point\n\t\t\t\t\t.split(\".\")\n\t\t\t\t\t// Clean up whitespace\n\t\t\t\t\t.map((str) => str.trim())\n\t\t\t\t\t// Remove any empty strings (by removing falsy values)\n\t\t\t\t\t.filter(Boolean);\n\t\t\t\tthis.setState({ misc: split });\n\t\t\t});\n\n\t\t// Education\n\t\tthis.RESUME_CONTENT.doc(`education ${this.state.education}`)\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tthis.setState({ degree: doc.data().degree });\n\t\t\t\tthis.setState({ duration: doc.data().duration });\n\t\t\t\tthis.setState({ university: doc.data().university });\n\t\t\t});\n\n\t\t// Work experience\n\t\tthis.RESUME_CONTENT.doc(`work box 1${this.state.work1}`)\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tthis.addPositionToList(doc.data());\n\t\t\t});\n\t\tthis.RESUME_CONTENT.doc(`work box 2${this.state.work1}`)\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tthis.addPositionToList(doc.data());\n\t\t\t});\n\t}\n\n\t/** Called when a section is toggled open/closed */\n\tcollapsibleToggled(eventKey) {\n\t\tif (eventKey === 0) {\n\t\t\t// Education Section\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleToggled\",\n\t\t\t\t\"education\",\n\t\t\t\t\"toggled education section \"\n\t\t\t);\n\t\t} else if (eventKey === 1) {\n\t\t\t// Work Section\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleToggled\",\n\t\t\t\t\"work\",\n\t\t\t\t\"toggled work section \"\n\t\t\t);\n\t\t} else if (eventKey === 2) {\n\t\t\t// Misc Section\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleToggled\",\n\t\t\t\t\"misc\",\n\t\t\t\t\"toggled misc section \"\n\t\t\t);\n\t\t}\n\t}\n\n\t/** Fetches the candidate data (name and gender) from the database and stores it in state */\n\tparseCandidateData(callbackFunc) {\n\t\tconst applicantData = this.db.collection(\"Applicants\");\n\n\t\tconst applicants = [];\n\n\t\tapplicantData\n\t\t\t.get()\n\t\t\t.then((querySnapshot) => {\n\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\tapplicants.push(doc.data());\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t// Set to state and call callback\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tapplicants: applicants,\n\t\t\t\t\t},\n\t\t\t\t\tcallbackFunc\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error getting candidates:\", error);\n\t\t\t});\n\t}\n\n\t/** Helper function: search through the text and replace option placeholders based on gender */\n\treplaceGenderOptions(text) {\n\t\t// We expect all options to be in the format [maleOption/femaleOption]\n\t\tconst matches = text.match(/\\[(.*?)\\/(.*?)\\]/g);\n\n\t\tif (!matches) {\n\t\t\treturn text;\n\t\t}\n\n\t\tmatches.forEach((match) => {\n\t\t\t// Slice off the brackets and split the options\n\t\t\tconst options = match.slice(1, -1).split(\"/\");\n\t\t\t// Replace the placeholder with the appropriate option\n\t\t\ttext = text.replace(match, this.state.isMan ? options[0] : options[1]);\n\t\t});\n\n\t\treturn text;\n\t}\n\n\t/** Helper function: append a new position to the positionList */\n\taddPositionToList(newPosition) {\n\t\tthis.setState((prevState) => ({\n\t\t\tpositionList: [...prevState.positionList, newPosition],\n\t\t}));\n\t}\n\n\t/** Runs when the user moves the mouse */\n\t_onMouseMove(e) {\n\t\t// this.recordActivity(\"mouse\", `(${e.clientX},${e.clientY})`, \"moved mouse\");\n\t}\n\n\trender() {\n\t\t// If our data hasn't loaded yet, show a loading screen\n\t\tif (\n\t\t\t!(\n\t\t\t\tthis.state.positionList.length > 0 &&\n\t\t\t\tthis.state.name\n\t\t\t)\n\t\t) {\n\t\t\treturn <h1>Loading...</h1>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"overall\">\n\t\t\t\t<div className=\"App\" onMouseMove={this._onMouseMove.bind(this)}>\n\t\t\t\t\t<div className=\"resume\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\tApplicant 1\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p> College: {this.state.college}</p>\n\t\t\t\t\t\t\t<p> Major: {this.state.major}</p>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\tStudent Information\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tLegal name: {this.state.name}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t\t{/* Education Section */}\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teducationSectionOpened:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.state.educationSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(0);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.educationSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmiscSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tEducation{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.educationSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"votingblock\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subtext\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tName: {this.state.school_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tState: {this.state.state}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t{/* Work Section */}\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\t\teventKey=\"1\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkSectionOpened: !this.state.workSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.workSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teducationSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmiscSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tWork Experience\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.workSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t\t{/* Position List */}\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.positionList.map((position, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"votingblock\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VotingBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsectionName={`work${index + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecordActivity={this.recordActivity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subtext\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{position.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">{position.company}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfogray\">{position.duration}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">{position.description}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t{/* Misc Section */}\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\t\teventKey=\"2\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmiscSectionOpened: !this.state.miscSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(2);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.miscSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Mark the other sections as closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teducationSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tMiscellaneous\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.miscSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"votingblock\">\n\t\t\t\t\t\t\t\t\t\t\t\t<VotingBlock\n\t\t\t\t\t\t\t\t\t\t\t\t\tsectionName=\"misc\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trecordActivity={this.recordActivity}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"notes\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tOther:\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.misc.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.replaceGenderOptions(item)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * Turns an image name into the src, relative to /public/images. Image should be a png.\n */\nexport function imageToURL(imageName) {\n\treturn `${process.env.PUBLIC_URL}/images/${imageName}.png`;\n}\n","import React, { useState } from \"react\";\n\n/*\n  This is the landing page for the demo. \n  It's a simple page that explains the study and shows you what the website looks like when embedded into a Qualtrics survey.\n*/\n\nexport default function LandingPage() {\n\tconst [iframes, setIframes] = useState([]);\n\n\tconst renderEmbeddedResume = (studyVersion, resumeVersion) => {\n\t\tconst iframeSrc = `/online-survey-digital-trace-data/#/${studyVersion}/${resumeVersion}/0sampleResponseIDstudy${studyVersion}`;\n\t\tconst iframeTitle = `${studyVersion}${resumeVersion}`;\n\n\t\tconst newIframe = (\n\t\t\t<iframe\n\t\t\t\tkey={iframeTitle}\n\t\t\t\theight=\"630px\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tsrc={iframeSrc}\n\t\t\t\ttitle={iframeTitle}\n\t\t\t></iframe>\n\t\t);\n\t\tsetIframes([...iframes, newIframe]);\n\t};\n\n\treturn (\n\t\t<div className=\"LandingPage container\">\n\t\t\t<h1>Pretend this is the Qualtrics Survey</h1>\n\n\t\t\t<h2>You'll have some questions</h2>\n\t\t\t<p>And information and such</p>\n\n\t\t\t<p>And then you can embed the Digital Trace Data page.</p>\n\n\t\t\t<p>\n\t\t\t\tBy default, we are manipulating candidate gender and parenthood status.\n\t\t\t</p>\n\n\t\t\t<p>There are two resumes. Here's Candidate 1.</p>\n\n\t\t\t<h3>First Resume</h3>\n\n\t\t\t<button onClick={() => renderEmbeddedResume(1, 1)}>\n\t\t\t\tGenerate Candidate 1 resume\n\t\t\t</button>\n\t\t\t{iframes.length >= 1 && iframes[0]}\n\n\t\t\t<h3>Second Resume</h3>\n\n\t\t\t<p>And now Candidate 2.</p>\n\n\t\t\t<button onClick={() => renderEmbeddedResume(1, 2)}>\n\t\t\t\tGenerate Candidate 2 resume\n\t\t\t</button>\n\t\t\t{iframes.length >= 2 && iframes[1]}\n\n\t\t\t<h2>Downloading the Data</h2>\n\t\t\t<p>\n\t\t\t\tOnce you've run your study, you can download the data in CSV format at{\" \"}\n\t\t\t\t<a href=\"#/admin\">/admin</a>. In this demo, you can download the data no\n\t\t\t\tmatter what password you put in.\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firebase\";\nimport Papa from \"papaparse\";\nimport ModalReact from \"react-modal\";\nimport { IS_DEMO_VERSION, adminPassword } from \"./config\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Admin extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowPasswordErrorMessage: false,\n\t\t\tisAuthenticated: false,\n\t\t\ttypedText: \"\",\n\n\t\t\tuserIDs: [],\n\t\t\tresumeCSVurl: null,\n\t\t\tactivitiesCSVurl: null,\n\t\t};\n\n\t\tthis.DATABASE = firebase.firestore();\n\n\t\tthis.resumeContent = [];\n\t\tthis.activityContent = [];\n\n\t\t// Ensures screen readers don't see the content while the modal is open\n\t\tconst rootElement = document.getElementById(\"root\");\n\t\tModalReact.setAppElement(rootElement);\n\t}\n\n\t/** Handles typing in the password box */\n\thandleChange(event) {\n\t\tthis.setState({ showPasswordErrorMessage: false });\n\t\tthis.setState({ typedText: event.target.value });\n\t}\n\n\t/** When the submit button is clicked */\n\tsubmitPassword() {\n\t\tif (this.state.typedText === adminPassword || IS_DEMO_VERSION) {\n\t\t\tthis.setState({ isAuthenticated: true });\n\t\t\tthis.fetchData();\n\t\t} else {\n\t\t\tthis.setState({ showPasswordErrorMessage: true, isAuthenticated: false });\n\t\t}\n\t}\n\n\t/** Main function that kick-starts all the downloading */\n\tasync fetchData() {\n\t\tlet userIDs = null;\n\n\t\t// In the demo version, only use the sample response IDs\n\t\tif (IS_DEMO_VERSION) {\n\t\t\tuserIDs = [\"0sampleResponseIDstudy1\", \"0sampleResponseIDstudy2\"];\n\t\t} else {\n\t\t\tconst tmp = await this.DATABASE.collection(\"responseIDs\").get();\n\t\t\tuserIDs = tmp.docs.map((doc) => doc.id);\n\t\t}\n\n\t\tif (userIDs.length > 0) {\n\t\t\tthis.setState({ userIDs: userIDs }, () => {\n\t\t\t\t// Get resume content for each user\n\t\t\t\tconst resumePromises = userIDs.map((user) => {\n\t\t\t\t\treturn Promise.all([\n\t\t\t\t\t\tthis.getResumeContent(user, 1),\n\t\t\t\t\t\tthis.getResumeContent(user, 2),\n\t\t\t\t\t]);\n\t\t\t\t});\n\n\t\t\t\t// Wait for all promises to resolve\n\t\t\t\tPromise.all(resumePromises)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// Create a CSV from the resume content\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tresumeCSVurl: this.createCSV(this.resumeContent),\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Error fetching resumes:\", error);\n\t\t\t\t\t});\n\n\t\t\t\t// Get activity content for each user\n\t\t\t\tconst activityPromises = userIDs.map((user) => {\n\t\t\t\t\treturn Promise.all([\n\t\t\t\t\t\tthis.getActivityContent(user, 1),\n\t\t\t\t\t\tthis.getActivityContent(user, 2),\n\t\t\t\t\t]);\n\t\t\t\t});\n\n\t\t\t\t// Wait for all promises to resolve\n\t\t\t\tPromise.all(activityPromises)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// Create a CSV from the activity content\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tactivitiesCSVurl: this.createCSV(this.activityContent),\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Error fetching activity:\", error);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/** Get the content of the resume a user saw */\n\tgetResumeContent(responseID, resumeNum) {\n\t\t// Get the reference to the resume\n\t\tconst resumeRef = this.DATABASE.collection(\"responseIDs\")\n\t\t\t.doc(responseID)\n\t\t\t.collection(\"values shown\")\n\t\t\t.doc(`resume ${resumeNum}`);\n\n\t\t// Get the content of the resume\n\t\treturn resumeRef\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tif (doc.exists) {\n\t\t\t\t\tthis.resumeContent.push({\n\t\t\t\t\t\tresponseID: responseID,\n\t\t\t\t\t\tresumeNum: resumeNum,\n\t\t\t\t\t\t...doc.data(),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"No such document!\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"Error getting document:\", error);\n\t\t\t});\n\t}\n\n\t/** Get the activity of a user on a specific resume */\n\tgetActivityContent(responseID, resumeNum) {\n\t\t// Get the reference to the resume\n\t\tconst resumeRef = this.DATABASE.collection(\"responseIDs\")\n\t\t\t.doc(responseID)\n\t\t\t.collection(`activityData_resume${resumeNum}`);\n\n\t\t// Get the content of the resume\n\t\treturn resumeRef.get().then((querySnapshot) => {\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\tthis.activityContent.push({\n\t\t\t\t\tresponseID: responseID,\n\t\t\t\t\tresumeNum: resumeNum,\n\t\t\t\t\tactivityID: doc.id,\n\t\t\t\t\t...doc.data(),\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/** Create a CSV from an array of dictionaries */\n\tcreateCSV(data) {\n\t\t// Convert the array of dictionaries to CSV format\n\t\tconst csv = Papa.unparse(data);\n\n\t\t// Create a Blob containing the CSV data\n\t\tconst blob = new Blob([csv], { type: \"text/csv\" });\n\n\t\t// Create a download link\n\t\treturn URL.createObjectURL(blob);\n\t}\n\n\trender() {\n\t\t/* Login popup */\n\t\tif (!this.state.isAuthenticated) {\n\t\t\treturn (\n\t\t\t\t<ModalReact className=\"modal_dtp\" isOpen={!this.state.isAuthenticated}>\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tthis.submitPassword();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\">Enter Password:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\t\t\t\tvalue={this.state.typedText}\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.showPasswordErrorMessage && (\n\t\t\t\t\t\t\t<div id=\"red\">Invalid password. Please re-enter.</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</ModalReact>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"overall\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"title\">Download Data</div>\n\n\t\t\t\t\t{!this.state.activitiesCSVurl && !this.state.resumeCSVurl && (\n\t\t\t\t\t\t<p>Processing...</p>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.state.activitiesCSVurl && (\n\t\t\t\t\t\t<div className=\"horizontal\" id=\"big\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={this.state.activitiesCSVurl}\n\t\t\t\t\t\t\t\tdownload={`activity_data.csv`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tActivity Data\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.state.resumeCSVurl && (\n\t\t\t\t\t\t<div className=\"horizontal\" id=\"big\">\n\t\t\t\t\t\t\t<a href={this.state.resumeCSVurl} download={`resume_data.csv`}>\n\t\t\t\t\t\t\t\tResume Data\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Admin;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport firebase from \"./firebase\";\nimport Resume from \"./Resume\";\nimport LandingPage from \"./LandingPage\";\nimport Admin from \"./Admin\";\nimport { IS_DEMO_VERSION } from \"./config\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nvar moment = require(\"moment-timezone\");\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.activityCounter = 1;\n\t\tthis.recordActivity = this.recordActivity.bind(this);\n\n\t\tthis.DATABASE = firebase.firestore();\n\n\t\t// This is hacky, but ReactRouter can't parse URL parameters unless inside a Route\n\t\tconst loc = document.location.hash;\n\t\tthis.studyVersion = parseInt(loc.split(\"/\")[1]);\n\t\tthis.resumeVersion = parseInt(loc.split(\"/\")[2]);\n\t\tthis.qualtricsUserId = loc.split(\"/\")[3];\n\n\t\t// Print for debugging purposes within Qualtrics\n\t\tconsole.log(\"qualtricsUserId: \" + this.qualtricsUserId);\n\t}\n\n\t/** Record the data (in Firebase, and print to console) */\n\tasync recordActivity(category, value, description) {\n\t\t// This will be the ID of the activity in Firebase -- a string, padded to 5 digits so alphabetical sorting works\n\t\tconst id = this.activityCounter.toString().padStart(5, \"0\");\n\t\tthis.activityCounter = this.activityCounter + 1;\n\n\t\tconst now = moment();\n\n\t\tif (!IS_DEMO_VERSION) {\n\t\t\tthis.DATABASE.collection(\"responseIDs\")\n\t\t\t\t.doc(this.qualtricsUserId)\n\t\t\t\t.collection(\"activityData_resume\" + this.resumeVersion.toString())\n\t\t\t\t.doc(id)\n\t\t\t\t.set({\n\t\t\t\t\tcategory: category,\n\t\t\t\t\tdescription: description,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttimestamp: new Date(now),\n\t\t\t\t\ttimeEpoch: Number(now.format(\"x\")),\n\t\t\t\t\ttimeReadable: now.tz(\"America/Los_Angeles\").format(\"M-D-YY h:mm:ssa\"),\n\t\t\t\t});\n\t\t}\n\n\t\tconsole.log(id + \" \" + category + \": \" + value + \" -- \" + description);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.recordActivity(\"loading\", \"accessed\", \"App mounted\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/:studyVersion/:resumeVersion/:qualtricsUserId\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Resume\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tstudyVersion={this.studyVersion}\n\t\t\t\t\t\t\t\tresumeVersion={this.resumeVersion}\n\t\t\t\t\t\t\t\trecordActivity={this.recordActivity}\n\t\t\t\t\t\t\t\tqualtricsUserId={this.qualtricsUserId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route path=\"/admin\" render={() => <Admin />} />\n\n\t\t\t\t\t<Route path=\"/\" exact render={() => <LandingPage />} />\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}